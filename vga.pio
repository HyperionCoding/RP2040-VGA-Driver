/*
Chart:  https://xess.com/static/media/uploads/blog/devbisme/2011-06-11/app001_2.png
Timings: http://tinyvga.com/vga-timing/640x480@60Hz
Resolution: 640x480 @ 59.94Hz (god damn ntsc)
Whole resolution: 800x525
Pixel frequency: 25.175 MHz
Line frequency: 31.46875 kHz
Hsync: 800 pixels (one line)
Vsync: 525 lines

Vertical timing (lines):
Front porch: 10
Sync pulse: 2
Back porch: 33

Horizontal timing (pixels):
Front porch: 16
Sync pulse: 96
Back porch: 48
*/

.program vga
; IRQs
;   irq0: set during visible area vertically
;   irq1: set during visible line horizontally
color:
    ; this is too slow, autopull needs to work
    ; and also double clock speed
    wait 0 irq 1
    ;pull IfEmpty NoBlock
    set pins 1 [1]
    set pins 0
;--------------------
hsync:
    wait 0 irq 0                ; 1
    ; start line, visible area
    irq clear 1                 ; 1 data start
    set x 21    ; 638=22*29     ; 1
hloop_data:
    jmp x-- hloop_data [28]     ; 638 data end 640
    ; front porch
    irq set 1                   ; 1 front start
    nop [13]                    ; 14
    ; pulse
    set x 4     ; 95=5*19       ; 1 front end 16
    set pins 0                  ; 1 pulse start
hloop_pulse:
    jmp x-- hloop_pulse [18]    ; 95 pulse end 96
    ; back
    set pins 1                  ; 1 back start
    nop [31]                    ; 32
    nop [13]                    ; 13 back end 47 !!!
;-------------------------------; Total  800 (800)
vsync:
    ; start row, visible area
    set x 16    ; 476=17*28     ; 1 data start
    irq clear 0                 ; 1 this ordering prevents additional hsync
                                ; however, now we need to signal color to start
vloop_data:
    jmp x-- vloop_data [27]     ; 476
    ; front porch
    nop [2]                     ; 2 data end 480
    irq set 0 [9]               ; 10 front
    ; pulse
    set pins 0 [1]              ; 2 pulse
    ; back porch
    set pins 1 [31]             ; 32 back start
    nop                         ; 1 back end 33
;-------------------------------; Total 525 (525)
    

% c-sdk {
#define PHSYNC 15
#define PVSYNC 14
#define PRED 13
#define PGREEN 12
#define PBLUE 11

#define SMCOLOR 0
#define SMHSYNC 1
#define SMVSYNC 2

static inline void vga_program_init(
    PIO pio, uint offset) {
    
    // Config color data
    pio_gpio_init(pio, PRED);
    pio_sm_set_consecutive_pindirs(pio, SMCOLOR, PRED, 1, true);
    pio_sm_config cfg_color = vga_program_get_default_config(offset);
    sm_config_set_set_pins(&cfg_color, PRED, 1);
    // Set PIO clock to half of system -> 25.175 MHz
    sm_config_set_clkdiv(&cfg_color, 2.0);
    // Autopull, threshold 32
    // This just doesn't work
    //sm_config_set_out_shift(&c, false, true, 32);
    sm_config_set_fifo_join(&cfg_color, PIO_FIFO_JOIN_TX);
    sm_config_set_wrap(&cfg_color, offset, offset+2);
    pio_sm_init(pio, SMCOLOR, offset, &cfg_color);

    // Config hsync
    pio_gpio_init(pio, PHSYNC);
    pio_sm_set_consecutive_pindirs(pio, SMHSYNC, PHSYNC, 1, true);
    pio_sm_config cfg_hsync = vga_program_get_default_config(offset);
    sm_config_set_set_pins(&cfg_hsync, PHSYNC, 1);
    sm_config_set_clkdiv(&cfg_hsync, 2.0);
    sm_config_set_wrap(&cfg_hsync, offset+3, offset+14);
    pio_sm_init(pio, SMHSYNC, offset+3, &cfg_hsync);

    // Config vsync
    pio_gpio_init(pio, PVSYNC);
    pio_sm_set_consecutive_pindirs(pio, SMVSYNC, PVSYNC, 1, true);
    pio_sm_config cfg_vsync = vga_program_get_default_config(offset);
    sm_config_set_set_pins(&cfg_vsync, PVSYNC, 1);
    // Set clock to 525*59.94 Hz (divide by 800 plus general /2)
    sm_config_set_clkdiv(&cfg_vsync, 1600);
    sm_config_set_wrap(&cfg_vsync, offset+15, offset+21);
    pio_sm_init(pio, SMVSYNC, offset+15, &cfg_vsync);

    // Enable interrupts


    // Enable all
    pio_enable_sm_mask_in_sync(pio, 0b0111);
}
%}